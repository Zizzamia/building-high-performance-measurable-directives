{"version":3,"sources":["web_driver_adapter.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7"],"names":[],"mappings":"AAAA,KAAO,EAAE,IAAG,CAAE,KAAO,cAAY,CAAC;AAClC,KAAO,EAAE,OAAM,CAAE,KAAO,4BAA0B,CAAC;AACnD,KAAO,EAAE,aAAY;AAAG,SAAO,CAAE,KAAO,2BAAyB,CAAC;AAClE,KAAO,EAAE,IAAG;AAAG,IAAE,CAAE,KAAO,iCAA+B,CAAC;AAQ1D,KAAO,MAAM,iBAAe;AAC1B,OAAO,OAAK,CAAE,aAAY,CAAG;AAC3B,SAAO,EACL,IAAG,AAAC,CAAC,gBAAe,CAAC,UAAU,AAAC,CAC9B,CAAC,QAAO,IAAM,SAAO,CAAG,EAAC,aAAY,CAAC,CACxC,CACF,CAAC;EACH;AAAA,AAEA,QAAM,CAAE,QAAO,AAAS,CAAW;AACjC,QAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;EAChC;AAAA,AACA,cAAY,CAAE,MAAK,AAAO,CAAW;AACnC,QAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;EAChC;AAAA,AACA,aAAW,CAAE,AAAD,CAAgB;AAC1B,QAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;EAChC;AAAA,AACA,KAAG,CAAE,IAAG,AAAO,CAAiB;AAC9B,QAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;EAChC;AAAA,AACF;AAAA,AChCA,KAAK,eAAe,AAAC,iCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cDSzB,SAAO,AAAC,EAAC,ECTuC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,kDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDmBP,QAAO,GCnBuB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,wDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YCD1B,MAAK,KAAK,UDCuC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,+CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YCD1B,MAAK,KAAK,UDCuC;EAAC,CAAC,CAAC,CAAC;ADgCrD","file":"/Users/tbosch/projects/angular2/modules/benchpress/src/web_driver_adapter.js","sourceRoot":"/Users/tbosch/projects/angular2/modules/benchpress/src/","sourcesContent":["import { bind } from 'angular2/di';\nimport { Promise } from 'angular2/src/facade/async';\nimport { BaseException, ABSTRACT } from 'angular2/src/facade/lang';\nimport { List, Map } from 'angular2/src/facade/collection';\n\n/**\n * A WebDriverAdapter bridges API differences between different WebDriver clients,\n * e.g. JS vs Dart Async vs Dart Sync webdriver.\n * Needs one implementation for every supported WebDriver client.\n */\n@ABSTRACT()\nexport class WebDriverAdapter {\n  static bindTo(delegateToken) {\n    return [\n      bind(WebDriverAdapter).toFactory(\n        (delegate) => delegate, [delegateToken]\n      )\n    ];\n  }\n\n  waitFor(callback:Function):Promise {\n    throw new BaseException('NYI');\n  }\n  executeScript(script:string):Promise {\n    throw new BaseException('NYI');\n  }\n  capabilities():Promise<Map> {\n    throw new BaseException('NYI');\n  }\n  logs(type:string):Promise<List> {\n    throw new BaseException('NYI');\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}