{"version":3,"sources":["perflog_metric.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"/Users/tbosch/projects/angular2/modules/benchpress/src/metric/perflog_metric.js","sourceRoot":"/Users/tbosch/projects/angular2/modules/benchpress/src/metric/","sourcesContent":["import { PromiseWrapper, Promise } from 'angular2/src/facade/async';\nimport { isPresent, isBlank, int, BaseException, StringWrapper, Math } from 'angular2/src/facade/lang';\nimport { ListWrapper, StringMap, StringMapWrapper } from 'angular2/src/facade/collection';\nimport { bind, OpaqueToken } from 'angular2/di';\n\nimport { WebDriverExtension } from '../web_driver_extension';\nimport { Metric } from '../metric';\n\n/**\n * A metric that reads out the performance log\n */\nexport class PerflogMetric extends Metric {\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get BINDINGS() { return _BINDINGS; }\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get SET_TIMEOUT() { return _SET_TIMEOUT; }\n\n  _driverExtension:WebDriverExtension;\n  _remainingEvents:List;\n  _measureCount:int;\n  _setTimeout:Function;\n\n  constructor(driverExtension:WebDriverExtension, setTimeout:Function) {\n    super();\n    this._driverExtension = driverExtension;\n    this._remainingEvents = [];\n    this._measureCount = 0;\n    this._setTimeout = setTimeout;\n  }\n\n  describe():StringMap {\n    return {\n      'script': 'script execution time in ms',\n      'render': 'render time in ms',\n      'gcTime': 'gc time in ms',\n      'gcAmount': 'gc amount in kbytes',\n      'gcTimeInScript': 'gc time during script execution in ms',\n      'gcAmountInScript': 'gc amount during script execution in kbytes'\n    };\n  }\n\n  beginMeasure():Promise {\n    return this._driverExtension.timeBegin(this._markName(this._measureCount++));\n  }\n\n  endMeasure(restart:boolean):Promise<Object> {\n    var markName = this._markName(this._measureCount-1);\n    var nextMarkName = restart ? this._markName(this._measureCount++) : null;\n    return this._driverExtension.timeEnd(markName, nextMarkName)\n      .then( (_) => this._readUntilEndMark(markName) );\n  }\n\n  _readUntilEndMark(markName:string, loopCount:int = 0, startEvent = null) {\n    if (loopCount > _MAX_RETRY_COUNT) {\n      throw new BaseException(`Tried too often to get the ending mark: ${loopCount}`);\n    }\n    return this._driverExtension.readPerfLog().then( (events) => {\n      this._addEvents(events);\n      var result = this._aggregateEvents(\n        this._remainingEvents, markName\n      );\n      if (isPresent(result)) {\n        this._remainingEvents = events;\n        return result;\n      }\n      var completer = PromiseWrapper.completer();\n      this._setTimeout(\n        () => completer.complete(this._readUntilEndMark(markName, loopCount+1)),\n        100\n      );\n      return completer.promise;\n    });\n  }\n\n  _addEvents(events) {\n    var needSort = false;\n    ListWrapper.forEach(events, (event) => {\n      if (StringWrapper.equals(event['ph'], 'X')) {\n        needSort = true;\n        var startEvent = {};\n        var endEvent = {};\n        StringMapWrapper.forEach(event, (value, prop) => {\n          startEvent[prop] = value;\n          endEvent[prop] = value;\n        });\n        startEvent['ph'] = 'B';\n        endEvent['ph'] = 'E';\n        endEvent['ts'] = startEvent['ts'] + startEvent['dur'];\n        ListWrapper.push(this._remainingEvents, startEvent);\n        ListWrapper.push(this._remainingEvents, endEvent);\n      } else {\n        ListWrapper.push(this._remainingEvents, event);\n      }\n    });\n    if (needSort) {\n      // Need to sort because of the ph==='X' events\n      ListWrapper.sort(this._remainingEvents, (a,b) => {\n        var diff = a['ts'] - b['ts'];\n        return diff > 0\n            ? 1\n            : diff < 0\n                ? -1\n                : 0;\n      });\n    }\n  }\n\n  _aggregateEvents(events, markName) {\n    var result = {\n      'script': 0,\n      'render': 0,\n      'gcTime': 0,\n      'gcAmount': 0,\n      'gcTimeInScript': 0,\n      'gcAmountInScript': 0\n    };\n\n    var markStartEvent = null;\n    var markEndEvent = null;\n\n    var intervalStarts = {};\n    events.forEach( (event) => {\n      var ph = event['ph'];\n      var name = event['name'];\n      if (StringWrapper.equals(ph, 'b') && StringWrapper.equals(name, markName)) {\n        markStartEvent = event;\n      } else if (StringWrapper.equals(ph, 'e') && StringWrapper.equals(name, markName)) {\n        markEndEvent = event;\n      }\n      if (isPresent(markStartEvent) && isBlank(markEndEvent) && event['pid'] === markStartEvent['pid']) {\n        if (StringWrapper.equals(ph, 'B')) {\n          intervalStarts[name] = event;\n        } else if (StringWrapper.equals(ph, 'E') && isPresent(intervalStarts[name])) {\n          var startEvent = intervalStarts[name];\n          var duration = event['ts'] - startEvent['ts'];\n          intervalStarts[name] = null;\n          if (StringWrapper.equals(name, 'gc')) {\n            result['gcTime'] += duration;\n            result['gcAmount'] += (startEvent['args']['usedHeapSize'] - event['args']['usedHeapSize']) / 1000;\n            if (isPresent(intervalStarts['script'])) {\n              result['gcTimeInScript'] += duration;\n              result['gcAmountInScript'] += result['gcAmount'];\n            }\n          } else {\n            result[name] += duration;\n          }\n        }\n      }\n    });\n    result['script'] -= result['gcTimeInScript'];\n    return isPresent(markStartEvent) && isPresent(markEndEvent) ? result : null;\n  }\n\n  _markName(index) {\n    return `${_MARK_NAME_PREFIX}${index}`;\n  }\n}\n\nvar _MAX_RETRY_COUNT = 20;\nvar _MARK_NAME_PREFIX = 'benchpress';\nvar _SET_TIMEOUT = new OpaqueToken('PerflogMetric.setTimeout');\nvar _BINDINGS = [\n  bind(PerflogMetric).toFactory(\n    (driverExtension, setTimeout) => new PerflogMetric(driverExtension, setTimeout),\n    [WebDriverExtension, _SET_TIMEOUT]\n  ),\n  bind(_SET_TIMEOUT).toValue( (fn, millis) => PromiseWrapper.setTimeout(fn, millis) )\n];","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","var $__placeholder__0 = $__placeholder__1","assert.argumentTypes($__placeholder__0)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}