{"version":3,"sources":["size_validator.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"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","file":"/Users/tbosch/projects/angular2/modules/benchpress/src/validator/size_validator.js","sourceRoot":"/Users/tbosch/projects/angular2/modules/benchpress/src/validator/","sourcesContent":["import { List, ListWrapper, StringMap } from 'angular2/src/facade/collection';\nimport { bind, OpaqueToken } from 'angular2/di';\n\nimport { Validator } from '../validator';\nimport { MeasureValues } from '../measure_values';\n\n/**\n * A validator that waits for the sample to have a certain size.\n */\nexport class SizeValidator extends Validator {\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get BINDINGS() { return _BINDINGS; }\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get SAMPLE_SIZE() { return _SAMPLE_SIZE; }\n\n  _sampleSize:number;\n\n  constructor(size) {\n    super();\n    this._sampleSize = size;\n  }\n\n  describe():StringMap {\n    return {\n      'sampleSize': this._sampleSize\n    };\n  }\n\n  validate(completeSample:List<MeasureValues>):List<MeasureValues> {\n    if (completeSample.length >= this._sampleSize) {\n      return ListWrapper.slice(completeSample, completeSample.length - this._sampleSize, completeSample.length);\n    } else {\n      return null;\n    }\n  }\n\n}\n\nvar _SAMPLE_SIZE = new OpaqueToken('SizeValidator.sampleSize');\nvar _BINDINGS = [\n  bind(SizeValidator).toFactory(\n    (size) => new SizeValidator(size),\n    [_SAMPLE_SIZE]\n  ),\n  bind(_SAMPLE_SIZE).toValue(10)\n];","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.argumentTypes($__placeholder__0)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}