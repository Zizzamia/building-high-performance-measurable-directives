{"version":3,"sources":["validator.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"AAAA;ACAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;WCArC,EAAC,GAAE,YCAqB;AAAE,sBAAwB;IAAE,ADA9B,CAAC;AEAvB,WAAS,CCAT,EAAC,KAAI,CDAO,KAAG,ACAS,CAAC;CJAgC,CAAC;AKA1D,AAAI,EAAA,CAAA,YAAW,6BAAoB,CAAC;;;;;;WCApC,EAAC,uCAAoB,CAAA,OAAM,AAAC,2BAAkB,CACtC,CAAA,wCAAqB,iDAA2B,CAAA,wCAAqB,GAAK,EAAC,OAAM,uCAAmB,CAAC,AAD/D,CACgE;EPDrG,KAAG,EOAZ,EAAC,qBAAoB,CAAA,OAAM,AAAC,eAAkB,CACtC,CAAA,sBAAqB,+BAA2B,CAAA,sBAAqB,GAAK,EAAC,OAAM,qBAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,8CAAoB,CAAA,OAAM,AAAC,kCAAkB,CACtC,CAAA,+CAAqB,wDAA2B,CAAA,+CAAqB,GAAK,EAAC,OAAM,8CAAmB,CAAC,AAD/D,CACgE;APArG,OAAG;AAAG,YAAQ;SODvB,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;APE5G,WAAO;AAAG,gBAAY;EAGf,cAAY,EONrB,EAAC,6CAAoB,CAAA,OAAM,AAAC,oBAAkB,CACtC,CAAA,8CAAqB,uDAA2B,CAAA,8CAAqB,GAAK,EAAC,OAAM,6CAAmB,CAAC,AAD/D,CACgE;ACD9G,AAAI,EAAA,YRcG,SAAM,UAAQ,KAuBrB,AQrCwC,CAAA;ACAxC,AAAI,EAAA,uBAAoC,CAAA;ACAxC,AAAC,eAAc,YAAY,CAAC,AAAC;AV0B3B,SAAO,CAAP,UAAS,cAAa,AAAoB,CAAuB;AW1BnE,SAAK,cAAc,gBCAnB,CAAA,MAAK,YAAY,AZ0BS,CAAA,IAAG,CAAE,cAAY,CAAC,AY1BR,CDAE,CAAA;AX2BlC,QAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;EAChC;AAMA,SAAO,CAAP,UAAS,AAAD,CAAa;AACnB,QAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;EAChC;AAAA,GArBO,MAAK,CAAZ,UAAc,aAAY;AACxB,SAAO,EACL,IAAG,AAAC,YAAU,UAAU,AAAC,EACvB,SAAC,QAAO;WAAM,SAAO;IAAA,EAAG,EAAC,aAAY,CAAC,CACxC,CACF,CAAC;EACH,EUrBmF;AGArF,KAAK,eAAe,AAAC,0BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cbYzB,SAAO,AAAC,EAAC,EaZuC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,4CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDD1B,MAAK,YAAY,AZ0BS,CAAA,IAAG,CAAE,cAAY,CAAC,AY1BR,GCCa;EAAC,CAAC,CAAC,CAAC;AboCrD","file":"/Users/tbosch/projects/angular2/modules/benchpress/src/validator.js","sourceRoot":"/Users/tbosch/projects/angular2/modules/benchpress/src/","sourcesContent":["import { bind } from 'angular2/di';\nimport { List, StringMap } from 'angular2/src/facade/collection';\nimport {\n  ABSTRACT, BaseException\n} from 'angular2/src/facade/lang';\n\nimport { MeasureValues } from './measure_values';\n\n/**\n * A Validator calculates a valid sample out of the complete sample.\n * A valid sample is a sample that represents the population that should be observed\n * in the correct way.\n */\n@ABSTRACT()\nexport class Validator {\n  static bindTo(delegateToken) {\n    return [\n      bind(Validator).toFactory(\n        (delegate) => delegate, [delegateToken]\n      )\n    ];\n  }\n\n  /**\n   * Calculates a valid sample out of the complete sample\n   */\n  validate(completeSample:List<MeasureValues>):List<MeasureValues> {\n    throw new BaseException('NYI');\n  }\n\n  /**\n   * Returns a Map that describes the properties of the validator\n   * (e.g. sample size, ...)\n   */\n  describe():StringMap {\n    throw new BaseException('NYI');\n  }\n}","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","var $__placeholder__0 = $__placeholder__1","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","assert.argumentTypes($__placeholder__0)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}