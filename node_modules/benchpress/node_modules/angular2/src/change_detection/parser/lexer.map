{"version":3,"sources":["lexer.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/385","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/2605"],"names":[],"mappings":"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","file":"/Users/tbosch/projects/angular2/modules/angular2/src/change_detection/parser/lexer.js","sourceRoot":"/Users/tbosch/projects/angular2/modules/angular2/src/change_detection/parser/","sourcesContent":["import {List, ListWrapper, SetWrapper} from \"angular2/src/facade/collection\";\nimport {int, FIELD, NumberWrapper, StringJoiner, StringWrapper} from \"angular2/src/facade/lang\";\n\nexport const TOKEN_TYPE_CHARACTER  = 1;\nexport const TOKEN_TYPE_IDENTIFIER = 2;\nexport const TOKEN_TYPE_KEYWORD    = 3;\nexport const TOKEN_TYPE_STRING     = 4;\nexport const TOKEN_TYPE_OPERATOR   = 5;\nexport const TOKEN_TYPE_NUMBER     = 6;\n\nexport class Lexer {\n  text:string;\n  tokenize(text:string):List {\n    var scanner = new _Scanner(text);\n    var tokens = [];\n    var token = scanner.scanToken();\n    while (token != null) {\n      ListWrapper.push(tokens, token);\n      token = scanner.scanToken();\n    }\n    return tokens;\n  }\n}\n\nexport class Token {\n  index:int;\n  type:int;\n  _numValue:number;\n  _strValue:string;\n  constructor(index:int, type:int, numValue:number, strValue:string) {\n    /**\n     * NOTE: To ensure that this constructor creates the same hidden class each time, ensure that\n     * all the fields are assigned to in the exact same order in each run of this constructor.\n     */\n    this.index = index;\n    this.type = type;\n    this._numValue = numValue;\n    this._strValue = strValue;\n  }\n\n  isCharacter(code:int):boolean {\n    return (this.type == TOKEN_TYPE_CHARACTER && this._numValue == code);\n  }\n\n  isNumber():boolean {\n    return (this.type == TOKEN_TYPE_NUMBER);\n  }\n\n  isString():boolean {\n    return (this.type == TOKEN_TYPE_STRING);\n  }\n\n  isOperator(operater:string):boolean {\n    return (this.type == TOKEN_TYPE_OPERATOR && this._strValue == operater);\n  }\n\n  isIdentifier():boolean {\n    return (this.type == TOKEN_TYPE_IDENTIFIER);\n  }\n\n  isKeyword():boolean {\n    return (this.type == TOKEN_TYPE_KEYWORD);\n  }\n\n  isKeywordVar():boolean {\n    return (this.type == TOKEN_TYPE_KEYWORD && this._strValue == \"var\");\n  }\n\n  isKeywordNull():boolean {\n    return (this.type == TOKEN_TYPE_KEYWORD && this._strValue == \"null\");\n  }\n\n  isKeywordUndefined():boolean {\n    return (this.type == TOKEN_TYPE_KEYWORD && this._strValue == \"undefined\");\n  }\n\n  isKeywordTrue():boolean {\n    return (this.type == TOKEN_TYPE_KEYWORD && this._strValue == \"true\");\n  }\n\n  isKeywordFalse():boolean {\n    return (this.type == TOKEN_TYPE_KEYWORD && this._strValue == \"false\");\n  }\n\n  toNumber():number {\n    // -1 instead of NULL ok?\n    return (this.type == TOKEN_TYPE_NUMBER) ? this._numValue : -1;\n  }\n\n  toString():string {\n    var type:int = this.type;\n    if (type >= TOKEN_TYPE_CHARACTER && type <= TOKEN_TYPE_STRING) {\n      return this._strValue;\n    } else if (type == TOKEN_TYPE_NUMBER) {\n      return this._numValue.toString();\n    } else {\n      return null;\n    }\n  }\n}\n\nfunction newCharacterToken(index:int, code:int):Token {\n  return new Token(index, TOKEN_TYPE_CHARACTER, code, StringWrapper.fromCharCode(code));\n}\n\nfunction newIdentifierToken(index:int, text:string):Token {\n  return new Token(index, TOKEN_TYPE_IDENTIFIER, 0, text);\n}\n\nfunction newKeywordToken(index:int, text:string):Token {\n  return new Token(index, TOKEN_TYPE_KEYWORD, 0, text);\n}\n\nfunction newOperatorToken(index:int, text:string):Token {\n  return new Token(index, TOKEN_TYPE_OPERATOR, 0, text);\n}\n\nfunction newStringToken(index:int, text:string):Token {\n  return new Token(index, TOKEN_TYPE_STRING, 0, text);\n}\n\nfunction newNumberToken(index:int, n:number):Token {\n  return new Token(index, TOKEN_TYPE_NUMBER, n, \"\");\n}\n\n\nexport var EOF:Token = new Token(-1, 0, 0, \"\");\n\nexport const $EOF       = 0;\nexport const $TAB       = 9;\nexport const $LF        = 10;\nexport const $VTAB      = 11;\nexport const $FF        = 12;\nexport const $CR        = 13;\nexport const $SPACE     = 32;\nexport const $BANG      = 33;\nexport const $DQ        = 34;\nexport const $HASH      = 35;\nexport const $$         = 36;\nexport const $PERCENT   = 37;\nexport const $AMPERSAND = 38;\nexport const $SQ        = 39;\nexport const $LPAREN    = 40;\nexport const $RPAREN    = 41;\nexport const $STAR      = 42;\nexport const $PLUS      = 43;\nexport const $COMMA     = 44;\nexport const $MINUS     = 45;\nexport const $PERIOD    = 46;\nexport const $SLASH     = 47;\nexport const $COLON     = 58;\nexport const $SEMICOLON = 59;\nexport const $LT        = 60;\nexport const $EQ        = 61;\nexport const $GT        = 62;\nexport const $QUESTION  = 63;\n\nconst $0 = 48;\nconst $9 = 57;\n\nconst $A = 65, $B = 66, $C = 67, $D = 68, $E = 69, $F = 70, $G = 71, $H = 72,\n      $I = 73, $J = 74, $K = 75, $L = 76, $M = 77, $N = 78, $O = 79, $P = 80,\n      $Q = 81, $R = 82, $S = 83, $T = 84, $U = 85, $V = 86, $W = 87, $X = 88,\n      $Y = 89, $Z = 90;\n\nexport const $LBRACKET  = 91;\nexport const $BACKSLASH = 92;\nexport const $RBRACKET  = 93;\nconst $CARET     = 94;\nconst $_         = 95;\n\nconst $a =  97, $b =  98, $c =  99, $d = 100, $e = 101, $f = 102, $g = 103,\n      $h = 104, $i = 105, $j = 106, $k = 107, $l = 108, $m = 109, $n = 110,\n      $o = 111, $p = 112, $q = 113, $r = 114, $s = 115, $t = 116, $u = 117,\n      $v = 118, $w = 119, $x = 120, $y = 121, $z = 122;\n\nexport const $LBRACE = 123;\nexport const $BAR    = 124;\nexport const $RBRACE = 125;\nconst $TILDE  = 126;\nconst $NBSP   = 160;\n\n\nexport class ScannerError extends Error {\n  message:string;\n  constructor(message) {\n    super();\n    this.message = message;\n  }\n\n  toString() {\n    return this.message;\n  }\n}\n\nclass _Scanner {\n  input:string;\n  length:int;\n  peek:int;\n  index:int;\n\n  constructor(input:string) {\n    this.input = input;\n    this.length = input.length;\n    this.peek = 0;\n    this.index = -1;\n    this.advance();\n  }\n\n  advance() {\n    this.peek = ++this.index >= this.length ? $EOF : StringWrapper.charCodeAt(this.input, this.index);\n  }\n\n  scanToken():Token {\n    var input = this.input,\n        length = this.length,\n        peek = this.peek,\n        index = this.index;\n\n    // Skip whitespace.\n    while (peek <= $SPACE) {\n      if (++index >= length) {\n        peek = $EOF;\n        break;\n      } else {\n        peek = StringWrapper.charCodeAt(input, index);\n      }\n    }\n\n    this.peek = peek;\n    this.index = index;\n\n    if (index >= length) {\n      return null;\n    }\n\n    // Handle identifiers and numbers.\n    if (isIdentifierStart(peek)) return this.scanIdentifier();\n    if (isDigit(peek)) return this.scanNumber(index);\n\n    var start:int = index;\n    switch (peek) {\n      case $PERIOD:\n        this.advance();\n        return isDigit(this.peek) ? this.scanNumber(start) :\n                                    newCharacterToken(start, $PERIOD);\n      case $LPAREN:   case $RPAREN:\n      case $LBRACE:   case $RBRACE:\n      case $LBRACKET: case $RBRACKET:\n      case $COMMA:\n      case $COLON:\n      case $SEMICOLON:\n        return this.scanCharacter(start, peek);\n      case $SQ:\n      case $DQ:\n        return this.scanString();\n      case $HASH:\n        return this.scanOperator(start, StringWrapper.fromCharCode(peek));\n      case $PLUS:\n      case $MINUS:\n      case $STAR:\n      case $SLASH:\n      case $PERCENT:\n      case $CARET:\n      case $QUESTION:\n        return this.scanOperator(start, StringWrapper.fromCharCode(peek));\n      case $LT:\n      case $GT:\n      case $BANG:\n      case $EQ:\n        return this.scanComplexOperator(start, $EQ, StringWrapper.fromCharCode(peek), '=');\n      case $AMPERSAND:\n        return this.scanComplexOperator(start, $AMPERSAND, '&', '&');\n      case $BAR:\n        return this.scanComplexOperator(start, $BAR, '|', '|');\n      case $TILDE:\n        return this.scanComplexOperator(start, $SLASH, '~', '/');\n      case $NBSP:\n        while (isWhitespace(this.peek)) this.advance();\n        return this.scanToken();\n    }\n\n    this.error(`Unexpected character [${StringWrapper.fromCharCode(peek)}]`, 0);\n    return null;\n  }\n\n  scanCharacter(start:int, code:int):Token {\n    assert(this.peek == code);\n    this.advance();\n    return newCharacterToken(start, code);\n  }\n\n\n  scanOperator(start:int, str:string):Token {\n    assert(this.peek == StringWrapper.charCodeAt(str, 0));\n    assert(SetWrapper.has(OPERATORS, str));\n    this.advance();\n    return newOperatorToken(start, str);\n  }\n\n  scanComplexOperator(start:int, code:int, one:string, two:string):Token {\n    assert(this.peek == StringWrapper.charCodeAt(one, 0));\n    this.advance();\n    var str:string = one;\n    if (this.peek == code) {\n      this.advance();\n      str += two;\n    }\n    assert(SetWrapper.has(OPERATORS, str));\n    return newOperatorToken(start, str);\n  }\n\n  scanIdentifier():Token {\n    assert(isIdentifierStart(this.peek));\n    var start:int = this.index;\n    this.advance();\n    while (isIdentifierPart(this.peek)) this.advance();\n    var str:string = this.input.substring(start, this.index);\n    if (SetWrapper.has(KEYWORDS, str)) {\n      return newKeywordToken(start, str);\n    } else {\n      return newIdentifierToken(start, str);\n    }\n  }\n\n  scanNumber(start:int):Token {\n    assert(isDigit(this.peek));\n    var simple:boolean = (this.index === start);\n    this.advance();  // Skip initial digit.\n    while (true) {\n      if (isDigit(this.peek)) {\n        // Do nothing.\n      } else if (this.peek == $PERIOD) {\n        simple = false;\n      } else if (isExponentStart(this.peek)) {\n        this.advance();\n        if (isExponentSign(this.peek)) this.advance();\n        if (!isDigit(this.peek)) this.error('Invalid exponent', -1);\n        simple = false;\n      } else {\n        break;\n      }\n      this.advance();\n    }\n    var str:string = this.input.substring(start, this.index);\n    // TODO\n    var value:number = simple ? NumberWrapper.parseIntAutoRadix(str) : NumberWrapper.parseFloat(str);\n    return newNumberToken(start, value);\n  }\n\n  scanString():Token {\n    assert(this.peek == $SQ || this.peek == $DQ);\n    var start:int = this.index;\n    var quote:int = this.peek;\n    this.advance();  // Skip initial quote.\n\n    var buffer:StringJoiner;\n    var marker:int = this.index;\n    var input:string = this.input;\n\n    while (this.peek != quote) {\n      if (this.peek == $BACKSLASH) {\n        if (buffer == null) buffer = new StringJoiner();\n        buffer.add(input.substring(marker, this.index));\n        this.advance();\n        var unescapedCode:int;\n        if (this.peek == $u) {\n          // 4 character hex code for unicode character.\n          var hex:string = input.substring(this.index + 1, this.index + 5);\n          try {\n            unescapedCode = NumberWrapper.parseInt(hex, 16);\n          } catch (e) {\n            this.error(`Invalid unicode escape [\\\\u${hex}]`, 0);\n          }\n          for (var i:int = 0; i < 5; i++) {\n            this.advance();\n          }\n        } else {\n          unescapedCode = unescape(this.peek);\n          this.advance();\n        }\n        buffer.add(StringWrapper.fromCharCode(unescapedCode));\n        marker = this.index;\n      } else if (this.peek == $EOF) {\n        this.error('Unterminated quote', 0);\n      } else {\n        this.advance();\n      }\n    }\n\n    var last:string = input.substring(marker, this.index);\n    this.advance();  // Skip terminating quote.\n\n    // Compute the unescaped string value.\n    var unescaped:string = last;\n    if (buffer != null) {\n      buffer.add(last);\n      unescaped = buffer.toString();\n    }\n    return newStringToken(start, unescaped);\n  }\n\n  error(message:string, offset:int) {\n    var position:int = this.index + offset;\n    throw new ScannerError(`Lexer Error: ${message} at column ${position} in expression [${this.input}]`);\n  }\n}\n\nfunction isWhitespace(code:int):boolean {\n  return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n\nfunction isIdentifierStart(code:int):boolean {\n  return ($a <= code && code <= $z) ||\n         ($A <= code && code <= $Z) ||\n         (code == $_) ||\n         (code == $$);\n}\n\nfunction isIdentifierPart(code:int):boolean {\n  return ($a <= code && code <= $z) ||\n         ($A <= code && code <= $Z) ||\n         ($0 <= code && code <= $9) ||\n         (code == $_) ||\n         (code == $$);\n}\n\nfunction isDigit(code:int):boolean {\n  return $0 <= code && code <= $9;\n}\n\nfunction isExponentStart(code:int):boolean {\n  return code == $e || code == $E;\n}\n\nfunction isExponentSign(code:int):boolean {\n  return code == $MINUS || code == $PLUS;\n}\n\nfunction unescape(code:int):int {\n  switch(code) {\n    case $n: return $LF;\n    case $f: return $FF;\n    case $r: return $CR;\n    case $t: return $TAB;\n    case $v: return $VTAB;\n    default: return code;\n  }\n}\n\nvar OPERATORS = SetWrapper.createFromList([\n  '+',\n  '-',\n  '*',\n  '/',\n  '~/',\n  '%',\n  '^',\n  '=',\n  '==',\n  '!=',\n  '<',\n  '>',\n  '<=',\n  '>=',\n  '&&',\n  '||',\n  '&',\n  '|',\n  '!',\n  '?',\n  '#'\n]);\n\n\nvar KEYWORDS = SetWrapper.createFromList([\n    'var',\n    'null',\n    'undefined',\n    'true',\n    'false',\n]);\n","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type($__placeholder__0, $__placeholder__1)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","void 0"]}