{"version":3,"sources":["proto_change_detector.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/385"],"names":[],"mappings":"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","file":"/Users/tbosch/projects/angular2/modules/angular2/src/change_detection/proto_change_detector.js","sourceRoot":"/Users/tbosch/projects/angular2/modules/angular2/src/change_detection/","sourcesContent":["import {isPresent, isBlank, BaseException, Type, isString} from 'angular2/src/facade/lang';\nimport {List, ListWrapper, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\n\nimport {\n  AccessMember,\n  Assignment,\n  AST,\n  ASTWithSource,\n  AstVisitor,\n  Binary,\n  Chain,\n  Conditional,\n  Pipe,\n  FunctionCall,\n  ImplicitReceiver,\n  Interpolation,\n  KeyedAccess,\n  LiteralArray,\n  LiteralMap,\n  LiteralPrimitive,\n  MethodCall,\n  PrefixNot\n  } from './parser/ast';\n\nimport {ChangeRecord, ChangeDispatcher, ChangeDetector} from './interfaces';\nimport {ChangeDetectionUtil} from './change_detection_util';\nimport {DynamicChangeDetector} from './dynamic_change_detector';\nimport {ChangeDetectorJITGenerator} from './change_detection_jit_generator';\nimport {PipeRegistry} from './pipes/pipe_registry';\n\nimport {coalesce} from './coalesce';\n\nimport {\n  ProtoRecord,\n  RECORD_TYPE_SELF,\n  RECORD_TYPE_PROPERTY,\n  RECORD_TYPE_INVOKE_METHOD,\n  RECORD_TYPE_CONST,\n  RECORD_TYPE_INVOKE_CLOSURE,\n  RECORD_TYPE_PRIMITIVE_OP,\n  RECORD_TYPE_KEYED_ACCESS,\n  RECORD_TYPE_PIPE,\n  RECORD_TYPE_INTERPOLATE\n  } from './proto_record';\n\nexport class ProtoChangeDetector  {\n  addAst(ast:AST, bindingMemento:any, directiveMemento:any = null){}\n  instantiate(dispatcher:any):ChangeDetector{\n    return null;\n  }\n}\n\nexport class DynamicProtoChangeDetector extends ProtoChangeDetector {\n  _records:List<ProtoRecord>;\n  _recordBuilder:ProtoRecordBuilder;\n  _pipeRegistry:PipeRegistry;\n\n  constructor(pipeRegistry:PipeRegistry) {\n    super();\n    this._pipeRegistry = pipeRegistry;\n    this._records = null;\n    this._recordBuilder = new ProtoRecordBuilder();\n  }\n\n  addAst(ast:AST, bindingMemento:any, directiveMemento:any = null) {\n    this._recordBuilder.addAst(ast, bindingMemento, directiveMemento);\n  }\n\n  instantiate(dispatcher:any) {\n    this._createRecordsIfNecessary();\n    return new DynamicChangeDetector(dispatcher, this._pipeRegistry, this._records);\n  }\n\n  _createRecordsIfNecessary() {\n    if (isBlank(this._records)) {\n      var records = this._recordBuilder.records;\n      this._records = coalesce(records);\n    }\n  }\n}\n\nvar _jitProtoChangeDetectorClassCounter:number = 0;\nexport class JitProtoChangeDetector extends ProtoChangeDetector {\n  _factory:Function;\n  _recordBuilder:ProtoRecordBuilder;\n  _pipeRegistry;\n\n  constructor(pipeRegistry) {\n    super();\n    this._pipeRegistry = pipeRegistry;\n    this._factory = null;\n    this._recordBuilder = new ProtoRecordBuilder();\n  }\n\n  addAst(ast:AST, bindingMemento:any, directiveMemento:any = null) {\n    this._recordBuilder.addAst(ast, bindingMemento, directiveMemento);\n  }\n\n  instantiate(dispatcher:any) {\n    this._createFactoryIfNecessary();\n    return this._factory(dispatcher, this._pipeRegistry);\n  }\n\n  _createFactoryIfNecessary() {\n    if (isBlank(this._factory)) {\n      var c = _jitProtoChangeDetectorClassCounter++;\n      var records = coalesce(this._recordBuilder.records);\n      var typeName = `ChangeDetector${c}`;\n      this._factory = new ChangeDetectorJITGenerator(typeName, records).generate();\n    }\n  }\n}\n\nclass ProtoRecordBuilder {\n  records:List<ProtoRecord>;\n\n  constructor() {\n    this.records = [];\n  }\n\n  addAst(ast:AST, bindingMemento:any, directiveMemento:any = null) {\n    var last = ListWrapper.last(this.records);\n    if (isPresent(last) && last.directiveMemento == directiveMemento) {\n      last.lastInDirective = false;\n    }\n\n    var pr = _ConvertAstIntoProtoRecords.convert(ast, bindingMemento, directiveMemento, this.records.length);\n    if (! ListWrapper.isEmpty(pr)) {\n      var last = ListWrapper.last(pr);\n      last.lastInBinding = true;\n      last.lastInDirective = true;\n\n      this.records = ListWrapper.concat(this.records, pr);\n    }\n  }\n}\n\nclass _ConvertAstIntoProtoRecords {\n  protoRecords:List;\n  bindingMemento:any;\n  directiveMemento:any;\n  contextIndex:number;\n  expressionAsString:string;\n\n  constructor(bindingMemento:any, directiveMemento:any, contextIndex:number, expressionAsString:string) {\n    this.protoRecords = [];\n    this.bindingMemento = bindingMemento;\n    this.directiveMemento = directiveMemento;\n    this.contextIndex = contextIndex;\n    this.expressionAsString = expressionAsString;\n  }\n\n  static convert(ast:AST, bindingMemento:any, directiveMemento:any, contextIndex:number) {\n    var c = new _ConvertAstIntoProtoRecords(bindingMemento, directiveMemento, contextIndex, ast.toString());\n    ast.visit(c);\n    return c.protoRecords;\n  }\n\n  visitImplicitReceiver(ast:ImplicitReceiver) {\n    return 0;\n  }\n\n  visitInterpolation(ast:Interpolation) {\n    var args = this._visitAll(ast.expressions);\n    return this._addRecord(RECORD_TYPE_INTERPOLATE, \"interpolate\", _interpolationFn(ast.strings),\n      args, ast.strings, 0);\n  }\n\n  visitLiteralPrimitive(ast:LiteralPrimitive) {\n    return this._addRecord(RECORD_TYPE_CONST, \"literal\", ast.value, [], null, 0);\n  }\n\n  visitAccessMember(ast:AccessMember) {\n    var receiver = ast.receiver.visit(this);\n    return this._addRecord(RECORD_TYPE_PROPERTY, ast.name, ast.getter, [], null, receiver);\n  }\n\n  visitMethodCall(ast:MethodCall) {\n    var receiver = ast.receiver.visit(this);\n    var args = this._visitAll(ast.args);\n    return this._addRecord(RECORD_TYPE_INVOKE_METHOD, ast.name, ast.fn, args, null, receiver);\n  }\n\n  visitFunctionCall(ast:FunctionCall) {\n    var target = ast.target.visit(this);\n    var args = this._visitAll(ast.args);\n    return this._addRecord(RECORD_TYPE_INVOKE_CLOSURE, \"closure\", null, args, null, target);\n  }\n\n  visitLiteralArray(ast:LiteralArray) {\n    var primitiveName = `arrayFn${ast.expressions.length}`;\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, primitiveName, _arrayFn(ast.expressions.length),\n      this._visitAll(ast.expressions), null, 0);\n  }\n\n  visitLiteralMap(ast:LiteralMap) {\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, _mapPrimitiveName(ast.keys),\n      ChangeDetectionUtil.mapFn(ast.keys), this._visitAll(ast.values), null, 0);\n  }\n\n  visitBinary(ast:Binary) {\n    var left = ast.left.visit(this);\n    var right = ast.right.visit(this);\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, _operationToPrimitiveName(ast.operation),\n      _operationToFunction(ast.operation), [left, right], null, 0);\n  }\n\n  visitPrefixNot(ast:PrefixNot) {\n    var exp = ast.expression.visit(this)\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, \"operation_negate\",\n      ChangeDetectionUtil.operation_negate, [exp], null, 0);\n  }\n\n  visitConditional(ast:Conditional) {\n    var c = ast.condition.visit(this);\n    var t = ast.trueExp.visit(this);\n    var f = ast.falseExp.visit(this);\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, \"cond\",\n      ChangeDetectionUtil.cond, [c,t,f], null, 0);\n  }\n\n  visitPipe(ast:Pipe) {\n    var value = ast.exp.visit(this);\n    return this._addRecord(RECORD_TYPE_PIPE, ast.name, ast.name, [], null, value);\n  }\n\n  visitKeyedAccess(ast:KeyedAccess) {\n    var obj = ast.obj.visit(this);\n    var key = ast.key.visit(this);\n    return this._addRecord(RECORD_TYPE_KEYED_ACCESS, \"keyedAccess\",\n      ChangeDetectionUtil.keyedAccess, [key], null, obj);\n  }\n\n  _visitAll(asts:List) {\n    var res = ListWrapper.createFixedSize(asts.length);\n    for (var i = 0; i < asts.length; ++i) {\n      res[i] = asts[i].visit(this);\n    }\n    return res;\n  }\n\n  _addRecord(type, name, funcOrValue, args, fixedArgs, context) {\n    var selfIndex = ++ this.contextIndex;\n    ListWrapper.push(this.protoRecords,\n      new ProtoRecord(type, name, funcOrValue, args, fixedArgs, context, selfIndex,\n        this.bindingMemento, this.directiveMemento, this.expressionAsString, false, false));\n    return selfIndex;\n  }\n}\n\n\nfunction _arrayFn(length:number):Function {\n  switch (length) {\n    case 0: return ChangeDetectionUtil.arrayFn0;\n    case 1: return ChangeDetectionUtil.arrayFn1;\n    case 2: return ChangeDetectionUtil.arrayFn2;\n    case 3: return ChangeDetectionUtil.arrayFn3;\n    case 4: return ChangeDetectionUtil.arrayFn4;\n    case 5: return ChangeDetectionUtil.arrayFn5;\n    case 6: return ChangeDetectionUtil.arrayFn6;\n    case 7: return ChangeDetectionUtil.arrayFn7;\n    case 8: return ChangeDetectionUtil.arrayFn8;\n    case 9: return ChangeDetectionUtil.arrayFn9;\n    default: throw new BaseException(`Does not support literal maps with more than 9 elements`);\n  }\n}\n\nfunction _mapPrimitiveName(keys:List) {\n  var stringifiedKeys = ListWrapper.join(\n    ListWrapper.map(keys, (k) => isString(k) ? `\"${k}\"` : `${k}`),\n    \", \");\n  return `mapFn([${stringifiedKeys}])`;\n}\n\nfunction _operationToPrimitiveName(operation:string):string {\n  switch(operation) {\n    case '+'  : return \"operation_add\";\n    case '-'  : return \"operation_subtract\";\n    case '*'  : return \"operation_multiply\";\n    case '/'  : return \"operation_divide\";\n    case '%'  : return \"operation_remainder\";\n    case '==' : return \"operation_equals\";\n    case '!=' : return \"operation_not_equals\";\n    case '<'  : return \"operation_less_then\";\n    case '>'  : return \"operation_greater_then\";\n    case '<=' : return \"operation_less_or_equals_then\";\n    case '>=' : return \"operation_greater_or_equals_then\";\n    case '&&' : return \"operation_logical_and\";\n    case '||' : return \"operation_logical_or\";\n    default: throw new BaseException(`Unsupported operation ${operation}`);\n  }\n}\n\nfunction _operationToFunction(operation:string):Function {\n  switch(operation) {\n    case '+'  : return ChangeDetectionUtil.operation_add;\n    case '-'  : return ChangeDetectionUtil.operation_subtract;\n    case '*'  : return ChangeDetectionUtil.operation_multiply;\n    case '/'  : return ChangeDetectionUtil.operation_divide;\n    case '%'  : return ChangeDetectionUtil.operation_remainder;\n    case '==' : return ChangeDetectionUtil.operation_equals;\n    case '!=' : return ChangeDetectionUtil.operation_not_equals;\n    case '<'  : return ChangeDetectionUtil.operation_less_then;\n    case '>'  : return ChangeDetectionUtil.operation_greater_then;\n    case '<=' : return ChangeDetectionUtil.operation_less_or_equals_then;\n    case '>=' : return ChangeDetectionUtil.operation_greater_or_equals_then;\n    case '&&' : return ChangeDetectionUtil.operation_logical_and;\n    case '||' : return ChangeDetectionUtil.operation_logical_or;\n    default: throw new BaseException(`Unsupported operation ${operation}`);\n  }\n}\n\nfunction s(v) {\n  return isPresent(v) ? `${v}` : '';\n}\n\nfunction _interpolationFn(strings:List) {\n  var length = strings.length;\n  var c0 = length > 0 ? strings[0] : null;\n  var c1 = length > 1 ? strings[1] : null;\n  var c2 = length > 2 ? strings[2] : null;\n  var c3 = length > 3 ? strings[3] : null;\n  var c4 = length > 4 ? strings[4] : null;\n  var c5 = length > 5 ? strings[5] : null;\n  var c6 = length > 6 ? strings[6] : null;\n  var c7 = length > 7 ? strings[7] : null;\n  var c8 = length > 8 ? strings[8] : null;\n  var c9 = length > 9 ? strings[9] : null;\n  switch (length - 1) {\n    case 1: return (a1) => c0 + s(a1) + c1;\n    case 2: return (a1, a2) =>  c0 + s(a1) + c1 + s(a2) + c2;\n    case 3: return (a1, a2, a3) =>  c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3;\n    case 4: return (a1, a2, a3, a4) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4;\n    case 5: return (a1, a2, a3, a4, a5) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5;\n    case 6: return (a1, a2, a3, a4, a5, a6) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6;\n    case 7: return (a1, a2, a3, a4, a5, a6, a7) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7;\n    case 8: return (a1, a2, a3, a4, a5, a6, a7, a8) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7 + s(a8) + c8;\n    case 9: return (a1, a2, a3, a4, a5, a6, a7, a8, a9) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7 + s(a8) + c8 + s(a9) + c9;\n    default: throw new BaseException(`Does not support more than 9 expressions`);\n  }\n}","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","assert.type($__placeholder__0, $__placeholder__1)"]}