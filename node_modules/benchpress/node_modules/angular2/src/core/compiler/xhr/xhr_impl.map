{"version":3,"sources":["xhr_impl.es6","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/189","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"AAAA;ACAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;SCArC,EAAC,GAAE,YCAqB;AAAE,oBAAwB;IAAE,ADA9B,CAAC;AEAvB,WAAS,CCAT,EAAC,KAAI,CDAO,KAAG,ACAS,CAAC;CJAgC,CAAC;AKA1D,AAAI,EAAA,CAAA,YAAW,4CAAoB,CAAC;;;;WCApC,EAAC,uCAAoB,CAAA,OAAM,AAAC,2BAAkB,CACtC,CAAA,wCAAqB,iDAA2B,CAAA,wCAAqB,GAAK,EAAC,OAAM,uCAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,yCAAoB,CAAA,OAAM,AAAC,6BAAkB,CACtC,CAAA,0CAAqB,mDAA2B,CAAA,0CAAqB,GAAK,EAAC,OAAM,yCAAmB,CAAC,AAD/D,CACgE;APDtG,UAAM;AAAG,iBAAa;EACtB,IAAE,EODV,EAAC,wDAAoB,CAAA,OAAM,AAAC,SAAkB,CACtC,CAAA,yDAAqB,kEAA2B,CAAA,yDAAqB,GAAK,EAAC,OAAM,wDAAmB,CAAC,AAD/D,CACgE;ACD9G,AAAI,EAAA,URGG,SAAM,QAAM;ASHnB,gBAAc,iBAAiB,AAAC,UACL,MAAM,AAAC,CAAC,IAAG,CAAG,UAAQ,CAAC,CAAA;ATyBlD,AQ1BwC,CAAA;AEAxC,AAAI,EAAA,mBAAoC,CAAA;ACAxC,AAAC,eAAc,YAAY,CAAC,AAAC,WXI3B,GAAE,CAAF,UAAI,GAAE,AAAQ;AYJhB,SAAK,cAAc,KCAnB,CAAA,MAAK,KAAK,QDA4B,CAAA;AZKlC,AAAI,MAAA,CAAA,SAAQ,EAAI,CAAA,cAAa,UAAU,AAAC,EAAC,CAAC;AAC1C,AAAI,MAAA,CAAA,GAAE,EAAI,IAAI,eAAa,AAAC,EAAC,CAAC;AAC9B,MAAE,KAAK,AAAC,CAAC,KAAI,CAAG,IAAE,CAAG,KAAG,CAAC,CAAC;AAC1B,MAAE,aAAa,EAAI,OAAK,CAAC;AAEzB,MAAE,OAAO,EAAI,UAAS,AAAD,CAAG;AACtB,AAAI,QAAA,CAAA,MAAK,EAAI,CAAA,GAAE,OAAO,CAAC;AACvB,SAAI,GAAE,GAAK,OAAK,CAAA,EAAK,CAAA,MAAK,GAAK,IAAE,CAAG;AAClC,gBAAQ,SAAS,AAAC,CAAC,GAAE,aAAa,CAAC,CAAC;MACtC,KAAO;AACL,gBAAQ,OAAO,AAAC,EAAC,iBAAiB,EAAC,IAAE,EAAG,CAAC;MAC3C;AAAA,IACF,CAAC;AAED,MAAE,QAAQ,EAAI,UAAS,AAAD,CAAG;AACvB,cAAQ,OAAO,AAAC,EAAC,iBAAiB,EAAC,IAAE,EAAG,CAAC;IAC3C,CAAC;AAED,MAAE,KAAK,AAAC,EAAC,CAAC;AcvBd,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CdwBd,SAAQ,QAAQ,CcxBgB,CCA3C,CAAA,MAAK,YAAY,AfIG,CAAA,OAAM,CaJ1B,CAAA,MAAK,KAAK,QbIwB,AeJE,CDA2B,CAAA;EdyB7D,MAtB2B,IAAE,CWFyB;AKDxD,KAAK,eAAe,AAAC,qCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YHD1B,MAAK,KAAK,UGCuC;EAAC,CAAC,CAAC,CAAC;AhB0BrD","file":"/Users/tbosch/projects/angular2/modules/angular2/src/core/compiler/xhr/xhr_impl.es6","sourceRoot":"/Users/tbosch/projects/angular2/modules/angular2/src/core/compiler/xhr/","sourcesContent":["import {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {XHR} from './xhr';\n\nexport class XHRImpl extends XHR {\n  get(url: string): Promise<string> {\n    var completer = PromiseWrapper.completer();\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'text';\n\n    xhr.onload = function() {\n      var status = xhr.status;\n      if (200 <= status && status <= 300) {\n        completer.complete(xhr.responseText);\n      } else {\n        completer.reject(`Failed to load ${url}`);\n      }\n    };\n\n    xhr.onerror = function() {\n      completer.reject(`Failed to load ${url}`);\n    };\n\n    xhr.send();\n    return completer.promise;\n  }\n}\n","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.superConstructor(\n          $__placeholder__0).apply(this, arguments)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}